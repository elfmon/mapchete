# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    # runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        rasterio-version: [1.1.4]
        # os: [ ubuntu-16.04, ubuntu-20.04 ]
        experimental: [false]
        include:
          - rasterio-version: latest
            experimental: true
            python-version: 3.8

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      env:
        RASTERIO_VERSION: ${{ matrix.rasterio-version }}
        CURL_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      run: |
        sudo apt-add-repository -y ppa:ubuntugis/ubuntugis-unstable && sudo apt-get -y update && sudo apt-get install -y gdal-bin python-tk libgdal-dev
        python -m pip install --upgrade pip
        pip install fiona shapely --no-binary :all:
        if [ $RASTERIO_VERSION == "latest" ]; then pip install rasterio --no-binary :all:; else pip install rasterio==$RASTERIO_VERSION --no-binary :all:; fi;
        pip install --upgrade pytest coveralls pytest-cov pytest-flask rio-cogeo flake8
        pip install -e .[complete]

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 mapchete --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 mapchete --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REQUEST_PAYER: ${{ secrets.AWS_REQUEST_PAYER }}
        CURL_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      run: |
        pytest -v --cov mapchete

    - name: Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls